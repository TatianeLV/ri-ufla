networks:
  dspacenet:
    ipam:
      config:
        - subnet: 172.23.0.0/16
services:
  # Container do Frontend
  ui:
     container_name: dspace-ui
     image: "ufla/ui:8.1"
     environment:
      TZ: "America/Sao_Paulo"
     build: 
       context: .
       dockerfile: ui.dockerfile
     env_file:
       - .env
     networks:
       - dspacenet
     ports:
     - published: 4000
       target: 4000
     stdin_open: true
     tty: true
     restart: unless-stopped

  # Container da API
  dspace:
    container_name: dspace
    environment:
      TZ: "America/Sao_Paulo"
      dspace__P__dir: /dspace
      dspace__P__name: 'RI UFLA'
      db__P__url: 'jdbc:postgresql://dspacedb:5432/dspace'
      solr__P__server: http://dspacesolr:8983/solr
      proxies__P__trusted__P__ipranges: '172.23.0'
      LOGGING_CONFIG: /dspace/config/log4j2-container.xml  
    image: "ufla/api:8.1"
    build:
      context: ./api
      dockerfile: Dockerfile
    depends_on:
    - dspacedb
    - dspacesolr
    networks:
      - dspacenet
    ports:
    - published: 8080
      target: 8080
    stdin_open: true
    tty: true
    volumes:
    - assetstore:/dspace/assetstore
    - ./api/dspace/config:/dspace/config
    - ./dbip-city-lite-2025-06.mmdb:/dspace/dbip-city-lite-2025-06.mmdb
    entrypoint:
    - /bin/bash
    - '-c'
    - |
      while (!</dev/tcp/dspacedb/5432) > /dev/null 2>&1; do sleep 1; done;
      /dspace/bin/dspace database migrate
      java -jar /dspace/webapps/server-boot.jar --dspace.dir=/dspace
    restart: unless-stopped

  # DSpace PostgreSQL database container
  dspacedb:
    container_name: dspacedb
    # Uses a custom Postgres image with pgcrypto installed
    # image: "${DOCKER_REGISTRY:-docker.io}/${DOCKER_OWNER:-dspace}/dspace-postgres-pgcrypto:${DSPACE_VER:-dspace-8_x}"
    image: "ufla/dspacedb:8.1"      
    env_file:
       - .env
    build:
      # Must build out of subdirectory to have access to install script for pgcrypto
      context: ./api/dspace/src/main/docker/dspace-postgres-pgcrypto/
    environment:
      PGDATA: /pgdata
    networks:
      dspacenet:
    ports:
    - published: 5432
      target: 5432
    stdin_open: true
    tty: true
    volumes:
    # Keep Postgres data directory between reboots
    - pgdata:/pgdata
    restart: unless-stopped
  # DSpace Solr container
  dspacesolr:
    container_name: dspacesolr
    # image: "${DOCKER_REGISTRY:-docker.io}/${DOCKER_OWNER:-dspace}/dspace-solr:${DSPACE_VER:-dspace-8_x}"
    image: "ufla/dspacesolr:8.1"
    environment:
      - TZ=America/Sao_Paulo
    build:
      context: ./api/dspace/src/main/docker/dspace-solr/
      # Provide path to Solr configs necessary to build Docker image
      additional_contexts:
        solrconfigs: ./api/dspace/solr/
      args:
        SOLR_VERSION: "${SOLR_VER:-8.11}"
    networks:
      dspacenet:
    ports:
    - published: 8983
      target: 8983
    stdin_open: true
    tty: true
    working_dir: /var/solr/data
    volumes:
    # Keep Solr data directory between reboots
    - solr_data:/var/solr/data
    # Initialize all DSpace Solr cores then start Solr:
    # * First, run precreate-core to create the core (if it doesn't yet exist). If exists already, this is a no-op
    # * Second, copy configsets to this core:
    #   Updates to Solr configs require the container to be rebuilt/restarted: `docker compose -p d7 up -d --build dspacesolr`
    entrypoint:
    - /bin/bash
    - '-c'
    - |
      init-var-solr
      precreate-core authority /opt/solr/server/solr/configsets/authority
      cp -r /opt/solr/server/solr/configsets/authority/* authority
      precreate-core oai /opt/solr/server/solr/configsets/oai
      cp -r /opt/solr/server/solr/configsets/oai/* oai
      precreate-core search /opt/solr/server/solr/configsets/search
      cp -r /opt/solr/server/solr/configsets/search/* search
      precreate-core statistics /opt/solr/server/solr/configsets/statistics
      cp -r /opt/solr/server/solr/configsets/statistics/* statistics
      precreate-core qaevent /opt/solr/server/solr/configsets/qaevent
      cp -r /opt/solr/server/solr/configsets/qaevent/* qaevent
      precreate-core suggestion /opt/solr/server/solr/configsets/suggestion
      cp -r /opt/solr/server/solr/configsets/suggestion/* suggestion
      exec solr -f
    restart: unless-stopped
    
volumes:
  assetstore:
  pgdata:
  solr_data:
